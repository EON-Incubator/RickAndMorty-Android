plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Ktlint plugin
    id "org.jlleitschuh.gradle.ktlint"  version "11.0.0"

    // Apollo Files and hilt
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'com.apollographql.apollo3'
}

android {
    namespace 'com.example.rickandmorty'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.rickandmorty"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.rickandmorty.CustomTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

allprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    ktlint{
        android = true
        ignoreFailures = false
        disabledRules = ["final-newline", "no-wildcard-imports","import-ordering"]
        reporters{
            reporter "plain"
            reporter "checkstyle"
            reporter "sarif"
        }
    }
}

subprojects {
    apply(plugin = "org.jlleitschuh.gradle.ktlint") // Version should be inherited from parent

    repositories {
        // Required to download KtLint
        mavenCentral()
        //for AndroidX test
        jcenter()
        google()
    }

}
dependencies {
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    def lifecycle_version = "2.4.0"


    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    kapt 'com.google.dagger:hilt-android-compiler:2.44'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.2.0'
    implementation 'com.google.dagger:hilt-android:2.44'
    implementation 'com.apollographql.apollo3:apollo-runtime:3.2.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'io.coil-kt:coil-compose:2.2.2'
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha09"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"
    implementation "androidx.navigation:navigation-compose:2.5.1"

    //Test View Model
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"


    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_ui_version")
    // Needed for createAndroidComposeRule, but not createComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_ui_version")

// Instrumentation tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.37'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.37'
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"


//    androidTestImplementation "io.mockk:mockk-common:1.12.5"
//    androidTestImplementation "io.mockk:mockk-android:1.10.5"

//    androidTestImplementation "io.mockk:mockk:1.12.5"
    androidTestImplementation "io.mockk:mockk-android:1.12.5"
//    androidTestImplementation "io.mockk:mockk-agent-android:1.10.5"

    androidTestImplementation 'androidx.test:runner:1.4.0'

    // Testing dependencies
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // Compose testing dependencies
    androidTestImplementation "androidx.compose.ui:ui-test"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    //Apollo Mock for testing
    testImplementation "com.apollographql.apollo3:apollo-mockserver:3.2.1"
    androidTestImplementation "com.apollographql.apollo3:apollo-mockserver-jvm:3.2.1"


}
apollo {
    service("service") {
        packageName.set("com.example")
    }
}
apollo {
    // instruct the compiler to generate Kotlin models
    generateKotlinModels.set(true)
    packageNamesFromFilePaths()
}
// Allow references to generated code
kapt {
    correctErrorTypes = true
}
